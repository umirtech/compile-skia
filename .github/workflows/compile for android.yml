name: Build Skia Android

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64

    steps:
      - name: Checkout Skia repo
        uses: actions/checkout@v4
        with:
          repository: google/skia
          path: skia

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 git cmake ninja-build wget unzip curl openjdk-11-jdk libexpat1-dev

      - name: Download Android NDK
        run: |
          mkdir -p $HOME/ndk
          wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip -O $HOME/ndk/android-ndk-r27c.zip
          unzip -q $HOME/ndk/android-ndk-r27c.zip -d $HOME/ndk
          echo "ANDROID_NDK_HOME=$HOME/ndk/android-ndk-r27c" >> $GITHUB_ENV

      - name: Fetch Skia dependencies
        run: |
          cd skia
          python3 tools/git-sync-deps
          tools/install_dependencies.sh

      - name: Build Skia for multiple Android ABIs
        run: |
          cd skia
          ABIS=("arm" "arm64" "x86" "x64")
          for ABI in "${ABIS[@]}"; do
            BUILD_DIR=out/android-$ABI
            mkdir -p $BUILD_DIR
            bin/gn gen $BUILD_DIR --args="is_official_build=true is_component_build=true ndk=\"$ANDROID_NDK_HOME\" target_cpu=\"$ABI\" skia_use_expat=false skia_enable_fontmgr_android=false skia_enable_fontmgr_android_ndk=false skia_use_libpng_decode=false skia_use_libpng_encode=false skia_use_no_png_encode=false"
            ninja -C $BUILD_DIR
          done

      - name: Upload built .so files and headers
        uses: actions/upload-artifact@v4
        with:
          name: skia-android-artifact
          path: |
            skia/out/android-*/libskia.so
            skia/include/**/*
